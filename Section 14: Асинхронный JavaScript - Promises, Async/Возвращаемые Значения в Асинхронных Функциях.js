// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –ó–Ω–∞—á–µ–Ω–∏—è –≤ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –§—É–Ω–∫—Ü–∏—è—Ö

const getUserPosition = function () {
  return new Promise(function (resolve, reject) {
    navigator.geolocation.getCurrentPosition(resolve, reject);
  });
};

const getCountryData = async function () {
  try {
    const userPosition = await getUserPosition();

    const { latitude: lat, longitude: lng } = userPosition.coords;

    const geocodingResponse = await fetch(
      `https://geocode.xyz/${lat},${lng}?geoit=json`
    );

    if (!geocodingResponse.ok)
      throw new Error('–ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è');

    const geocodingData = await geocodingResponse.json();

    const response = await fetch(
      `https://restcountries.com/v3.1/name/${geocodingData.country.toLowerCase()}`
    );

    if (!response.ok) throw new Error('–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω—ã');

    const data = await response.json();
    displayCountry(data[0]);
    return `You are in ${geocodingData.city}, ${geocodingData.country}`;
  } catch (e) {
    console.error(`${e} üßê`);
    displayError(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üßê ${e.message}`);

    // –û—Ç–∫–ª–æ–Ω—è–µ–º promise, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∏–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    throw e;
  }
};

console.log('1 –ë—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
// const place = getCountryData();
// console.log(place);
// getCountryData()
//   .then(place => console.log(`2 ${place}`))
//   .catch(e => console.error(`2 ${e.message} üßê`))
//   .finally(() => console.log('3 –ü–æ–ª—É—á–∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'));

(async function () {
  try {
    const place = await getCountryData();
    console.log(`2 ${place}`);
  } catch (e) {
    console.error(`2 ${e.message} üßê`);
  }
  console.log('3 –ü–æ–ª—É—á–∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ');
})();
